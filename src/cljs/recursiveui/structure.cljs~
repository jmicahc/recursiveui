(ns recursiveui.structure
  (:require [recursiveui.element :as elem
             :refer [attr style tag]]))


(def layout-row
  (memoize (fn [{:keys [layout/magnitude]}]
             (comp (attr :class "layout-row")
                   (style :height magnitude
                          :display "flex"
                          :flexDiretion "row")))))




(def layout-column
  (memoize (fn [{:keys [layout/magnitude]}]
             (comp (attr :class "layout-column")
                   (style :width magnitude
                          :display "flex"
                          :flexDirection "column")))))




(def layout-root
  (memoize (fn [{:keys [style/width style/height
                        style/top   style/left
                        style/flex-direction]}]
             (comp (attr :class "layout-root")
                   (style :width width
                          :height height
                          :top top
                          :left left
                          :dipslay "flex"
                          :position "absolute"
                          :flexDirection flex-direction)))))



(def side-bar-left
  (fn [{:keys [side-bar/backgroundColor
               side-bar/opacity
               side-bar/width]
        :or {width "15px"
             backgroundColor "red"
             opacity 1}
        :as node}]
    (comp (attr :class "side-bar")
          (style :backgroundColor backgroundColor
                 :width width
                 :height "100%"
                 :opacity opacity))))



(def side-bar-right
  (fn [{:keys [side-bar/backgroundColor
               side-bar/opacity
               side-bar/width]
        :or {width "15px"
             backgroundColor "pink"
             opacity 1}
        :as node}]
    (comp (attr :class "side-bar")
          (style :backgroundColor backgroundColor
                 :right 0
                 :width width
                 :height "100%"
                 :opacity opacity))))


